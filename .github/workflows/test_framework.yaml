name: Tests framework
on: 
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
      - '**'
jobs:
  #   Postgres:
  #     runs-on: ubuntu-latest
  #     strategy:
  #       fail-fast: false
  #       matrix:
  #         # python-version: ['3.7', '3.8', '3.9', '3.10']
  #         python-version: ['3.10']
  #     services:
  #       postgres:
  #         image: postgres:latest
  #         env:
  #           POSTGRES_USER: postgres
  #           POSTGRES_PASSWORD: postgres
  #           POSTGRES_DB: sqlalchemy_utils_test
  #         # Set health checks to wait until PostgreSQL has started
  #         options: >-
  #           --health-cmd pg_isready
  #           --health-interval 10s
  #           --health-timeout 5s
  #           --health-retries 5
  #         ports:
  #           - 5432:5432
  #     steps:
  #       - uses: actions/checkout@v2
  #       - name: Set up Python
  #         uses: actions/setup-python@v2
  #         with:
  #           python-version: ${{ matrix.python-version }}
  #       - name: Install graphviz package
  #         run: bash .ci/install_graphviz.sh
  #       - name: Install Wheel
  #         run: pip install -U pip wheel
  #       - name: Install psycopg2
  #         run: pip install psycopg2
  #       - name: Install pytest
  #         run: pip install pytest pytest-cov mock
  #       - name: Install extra dependencies
  #         run: pip install colour passlib furl phonenumbers pycountry cryptography
  #       - name: Install AnyBlok
  #         run: pip install .
  #       - name: Run tests
  #         env:
  #           ANYBLOK_DATABASE_DRIVER: postgresql
  #           ANYBLOK_DATABASE_NAME: sqlalchemy_utils_test
  #           ANYBLOK_DATABASE_PORT: 5432
  #           ANYBLOK_DATABASE_HOST: localhost
  #           ANYBLOK_DATABASE_USER: postgres
  #           ANYBLOK_DATABASE_PASSWORD: postgres
  #         run: pytest --cov-report xml  anyblok/tests/test_authorization.py
  #       - name: Coveralls
  #         uses: coverallsapp/github-action@1.1.3
  #         with:
  #           github-token: ${{ secrets.GITHUB_TOKEN }}
  #           parallel: true
  #           flag-name: ${{ github.job }}
  #           path-to-lcov: coverage.xml

  MySQL:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: sqlalchemy_utils_test
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_ROOT_PASSWORD: rootpassword
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install graphviz package
        run: bash .ci/install_graphviz.sh
      - name: Install Wheel
        run: pip install -U pip wheel
      - name: Install mysqlclient
        run: pip install mysqlclient
      - name: Install pytest
        run: pip install pytest pytest-cov mock
      - name: Install extra dependencies
        run: pip install colour passlib furl phonenumbers pycountry cryptography
      - name: Install AnyBlok
        run: pip install .
          # - name: Set up MySQL
          #   run: sudo /etc/init.d/mysql start
      - name: Run tests
        env:
          ANYBLOK_DATABASE_DRIVER: mysql
          ANYBLOK_DATABASE_NAME: sqlalchemy_utils_test
          ANYBLOK_DATABASE_PORT: 3306
          ANYBLOK_DATABASE_HOST: localhost
          ANYBLOK_DATABASE_USER: root
          ANYBLOK_DATABASE_PASSWORD: root
        run: pytest --cov-report xml anyblok/tests/test_authorization.py
          #      - name: Coveralls
          #        uses: coverallsapp/github-action@1.1.3
          #        with:
          #          github-token: ${{ secrets.GITHUB_TOKEN }}
          #          parallel: true
          #          flag-name: ${{ github.job }}
          #          path-to-lcov: coverage.xml

            #   finish:
            #     needs: [Postgres, MySQL]
            #     runs-on: ubuntu-20.04
            #     steps:
            #       - name: Coveralls Finished
            #         uses: coverallsapp/github-action@1.1.3
            #         with:
            #           github-token: ${{ secrets.GITHUB_TOKEN }}
            #           parallel-finished: true
            #           path-to-lcov: coverage.xml
